<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.xiaody.blog.dao.AccountMapper">
    <resultMap id="account" type="com.xiaody.blog.model.Account">
        <result column="id" property="id"></result>
        <result column="user_name" property="userName"></result>
        <result column="password" property="password"></result>
        <result column="nick_name" property="nickName"></result>
        <result column="mobile" property="mobile"></result>
        <result column="email" property="email"></result>
        <result column="photo" property="photo"></result>
        <result column="last_login_time" property="lastLoginTime"></result>
        <result column="created_time" property="createdTime"></result>
        <result column="updated_time" property="updatedTime"></result>
        <result column="deleted" property="deleted"></result>
    </resultMap>

    <insert id="create" useGeneratedKeys="true"
            keyProperty="entity.id" keyColumn="id">
        insert into account (
            user_name,password,nick_name,mobile,email,photo,last_login_time)
        values (
            #{entity.userName},#{entity.password},#{entity.nickName},
            #{entity.mobile},#{entity.email},
            #{entity.photo},#{entity.lastLoginTime}
        )
    </insert>

    <update id="update">
        update
            account
        set
            user_name = #{entity.userName},
            password = #{entity.password},
            nick_name = #{entity.nickName},
            mobile = #{entity.mobile},
            email = #{entity.email},
            photo = #{entity.photo},
            last_login_time = #{entity.lastLoginTime},
            updated_time = #{entity.updatedTime},
            deleted = #{entity.deleted}
        where
            id = #{id}
    </update>

    <delete id="delete">
        delete from account where id = #{id}
    </delete>

    <select id="get" resultMap="account">
        select * from account where id = #{id}
    </select>

    <select id="checkMobileLogin" resultMap="account">
        select * from account
        where mobile =#{mobile} and password=#{password}
        limit 1
    </select>

    <select id="checkMobileExists" resultType="boolean">
         select exists(
            select 1 from account where mobile = #{mobile}
        )
    </select>

    <select id="searchByPage" resultMap="account">
        select *from account
    </select>

</mapper>